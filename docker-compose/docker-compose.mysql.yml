services:
  web:
    image: ${REPO}-${WEBSERVER}
    container_name: ${STACK_NAME}_web
    restart: always
    ports:
      - "${HOST_IP}:${WEB_PORT}:${WEB_PORT}"
      - "${HOST_IP}:${WEBS_PORT}:${WEBS_PORT}"
    volumes:
      - ${STACK_SRC}:/var/www/html
      - ./config/moodle/config.mysql.php:/var/www/html/config.php
      - ${STACK_VOLUME}/moodle/data:/var/www/moodledata
      - ${STACK_VOLUME}/phpunit/moodle/data:/var/www/phpu_moodledata
      - ${STACK_VOLUME}/moodle/certbot/www/:/var/www/certbot/:rw
      - ${STACK_VOLUME}/moodle/certbot/conf/:/etc/letsencrypt/:rw
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_PREFIX=${MYSQL_PREFIX}
      - MYSQL_PORT=${MYSQL_PORT}
      - FORCE_DEBUG=${FORCE_DEBUG}
      - WEBSERVER=${WEBSERVER}
      - WEB_PORT=${WEB_PORT}
      - WEBS_PORT=${WEBS_PORT}
      - DOMAIN=${DOMAIN}
      - CERT_COUNTRY=${CERT_COUNTRY}
      - CERT_STATE=${CERT_STATE}
      - CERT_CITY=${CERT_CITY}
      - CERT_ORG=${CERT_ORG}
      - CERT_ORG_UNIT=${CERT_ORG_UNIT}
      - SERVERURL=${SERVERURL}
      - WWWROOT=${WWWROOT}
      - SERVERURL=${SERVERURL}
      - WWWROOT=${WWWROOT}
      - TZ=${TZ}
      - PHPU_ENABLED=${PHPU_ENABLED}
      - PHPU_MYSQL_PREFIX=${PHPU_MYSQL_PREFIX}
      - PHPU_MYSQL_DATABASE=${PHPU_MYSQL_DATABASE}
      - PHPU_MYSQL_USER=${PHPU_MYSQL_USER}
      - PHPU_MYSQL_PASSWORD=${PHPU_MYSQL_PASSWORD}
    depends_on:
      - db
    networks:
      - moodle_network
    deploy:
      resources:
        limits:
          cpus: ${CPUS}
          memory: ${MEMORY}
  certbot:
    image: certbot/certbot:latest
    container_name: ${STACK_NAME}_certbot
    networks:
      - moodle_network
    depends_on:
      - web
    volumes:
      - ${STACK_VOLUME}/moodle/certbot/www/:/var/www/certbot/:rw
      - ${STACK_VOLUME}/moodle/certbot/conf/:/etc/letsencrypt/:rw
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  db:
    # image: mysql:8.0
    build:
      context: ./docker-files/db/mysql
    container_name: ${STACK_NAME}_db
    restart: always
    # ports:
    #   - "${MYSQL_DB_PORT}:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - TZ=${TZ}
      - --character-set-server=utf8mb4 
      - --collation-server=utf8mb4_unicode_ci
    volumes:
      - ${STACK_VOLUME}/mysql/data:/var/lib/mysql
      - ./config/db/mysql/my.cnf:/etc/my.cnf
      # - ./backup/mariadb:/var/mariadb/backup/
      - ./config/db/mysql/init.sql.template:/init.sql.template
      - ./config/db/mysql/custom-docker-entrypoint.sh:/custom-docker-entrypoint.sh
    entrypoint: ["/custom-docker-entrypoint.sh"]
    networks:
      - moodle_network
      - pma_network
    deploy:
      resources:
        limits:
          cpus: ${CPUS}
          memory: ${MEMORY}
  pma:
    image: phpmyadmin/phpmyadmin
    container_name: ${STACK_NAME}_phpmyadmin
    restart: always
    ports:
      - "${MYSQL_PMA_PORT}:80"
      - "${MYSQL_PMAS_PORT}:443"
    environment:
      - PMA_HOST=db

      # Careful: Uncomment these will expose your phpmyadmin login.
      # - PMA_USER=${MYSQL_USER}
      # - PMA_PASSWORD=${MYSQL_PASSWORD}
      # - PMA_DATABASE=${MYSQL_DATABASE}
      # - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    command: >
      sh -c "if [ ! -f /etc/phpmyadmin/config.secret.inc.php ]; then
              echo \"<?php\\n\\\$$cfg['blowfish_secret'] = '$(php -r 'echo bin2hex(random_bytes(32));')';\" > /etc/phpmyadmin/config.secret.inc.php;
            fi &&
            a2enmod ssl && a2ensite 000-default && a2ensite default-ssl &&
            apache2-foreground"
    depends_on:
      - db
    networks:
      - pma_network
    volumes:
      - ${STACK_VOLUME}/moodle/certbot/conf/live/${DOMAIN}/fullchain.pem:/etc/ssl/certs/ssl-cert-snakeoil.pem:ro
      - ${STACK_VOLUME}/moodle/certbot/conf/live/${DOMAIN}/privkey.pem:/etc/ssl/private/ssl-cert-snakeoil.key:ro
    deploy:
      resources:
        limits:
          cpus: ${CPUS}
          memory: ${MEMORY}

  phpu_db:
    # image: mysql:8.0
    build:
      context: ./docker-files/db/mysql
    container_name: ${STACK_NAME}_phpunit_db
    restart: always
    # ports:
    #   - "${PHPU_MYSQL_DB_PORT}:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${PHPU_MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${PHPU_MYSQL_DATABASE}
      - MYSQL_USER=${PHPU_MYSQL_USER}
      - MYSQL_PASSWORD=${PHPU_MYSQL_PASSWORD}
      - TZ=${TZ}
      - --character-set-server=utf8mb4 
      - --collation-server=utf8mb4_unicode_ci
    volumes:
      - ${STACK_VOLUME}/phpunit/mysql/data:/var/lib/mysql
      - ./config/phpunit/mysql/my.cnf:/etc/my.cnf
      - ./config/db/mysql/init.sql.template:/init.sql.template
      - ./config/db/mysql/custom-docker-entrypoint.sh:/custom-docker-entrypoint.sh
    entrypoint: ["/custom-docker-entrypoint.sh"]
    networks:
      - moodle_network
      - phpu_pma_network
    deploy:
      resources:
        limits:
          cpus: ${CPUS}
          memory: ${MEMORY}

  phpu_pma:
    image: phpmyadmin/phpmyadmin
    container_name: ${STACK_NAME}_phpunit_phpmyadmin
    restart: always
    ports:
      - "${PHPU_MYSQL_PMA_PORT}:80"
      - "${PHPU_MYSQL_PMAS_PORT}:443"
    environment:
      - PMA_HOST=phpu_db

      # Careful: Uncomment these will expose your phpmyadmin login.
      # - PMA_USER=${PHPU_MYSQL_USER}
      # - PMA_PASSWORD=${PHPU_MYSQL_PASSWORD}
      # - PMA_DATABASE=${PHPU_MYSQL_DATABASE}
      # - MYSQL_ROOT_PASSWORD=${PHPU_MYSQL_ROOT_PASSWORD}
    command: >
      sh -c "if [ ! -f /etc/phpmyadmin/config.secret.inc.php ]; then
              echo \"<?php\\n\\\$$cfg['blowfish_secret'] = '$(php -r 'echo bin2hex(random_bytes(32));')';\" > /etc/phpmyadmin/config.secret.inc.php;
            fi &&
            a2enmod ssl && a2ensite 000-default && a2ensite default-ssl &&
            apache2-foreground"
    depends_on:
      - db
    networks:
      - phpu_pma_network
    volumes:
      - ${STACK_VOLUME}/moodle/certbot/conf/live/${DOMAIN}/fullchain.pem:/etc/ssl/certs/ssl-cert-snakeoil.pem:ro
      - ${STACK_VOLUME}/moodle/certbot/conf/live/${DOMAIN}/privkey.pem:/etc/ssl/private/ssl-cert-snakeoil.key:ro
    deploy:
      resources:
        limits:
          cpus: ${CPUS}
          memory: ${MEMORY}

networks:
  moodle_network:
  pma_network:
  phpu_pma_network:
