services:
  web:
    image: ${REPO}-${WEBSERVER}
    container_name: ${STACK_NAME}_web
    restart: always
    ports:
      - "${HOST_IP}:${WEB_PORT}:${WEB_PORT}"
      - "${HOST_IP}:${WEBS_PORT}:${WEBS_PORT}"
    volumes:
      - ${STACK_SRC}:/var/www/html
      - ./config/moodle/config.pgsql.php:/var/www/html/config.php
      - ${STACK_VOLUME}/moodle/data:/var/www/moodledata
      - ${STACK_VOLUME}/phpunit/moodle/data:/var/www/phpu_moodledata
      - ${STACK_VOLUME}/moodle/certbot/www/:/var/www/certbot/:rw
      - ${STACK_VOLUME}/moodle/certbot/conf/:/etc/letsencrypt/:rw
    environment:
      - PGSQL_DB=${PGSQL_DB}
      - PGSQL_USER=${PGSQL_USER}
      - PGSQL_PASSWORD=${PGSQL_PASSWORD}
      - PGSQL_PREFIX=${PGSQL_PREFIX}
      - PGSQL_PORT=${PGSQL_PORT}
      - FORCE_DEBUG=${FORCE_DEBUG}
      - ENABLE_CRON=${ENABLE_CRON}
      - WEBSERVER=${WEBSERVER}
      - WEB_PORT=${WEB_PORT}
      - WEBS_PORT=${WEBS_PORT}
      - DOMAIN=${DOMAIN}
      - CERT_COUNTRY=${CERT_COUNTRY}
      - CERT_STATE=${CERT_STATE}
      - CERT_CITY=${CERT_CITY}
      - CERT_ORG=${CERT_ORG}
      - CERT_ORG_UNIT=${CERT_ORG_UNIT}
      - SERVERURL=${SERVERURL}
      - WWWROOT=${WWWROOT}
      - SERVERURL=${SERVERURL}
      - WWWROOT=${WWWROOT}
      - TZ=${TZ}
      - PHPU_ENABLED=${PHPU_ENABLED}
      - PHPU_PGSQL_PREFIX=${PHPU_PGSQL_PREFIX}
      - PHPU_PGSQL_DB=${PHPU_PGSQL_DB}
      - PHPU_PGSQL_USER=${PHPU_PGSQL_USER}
      - PHPU_PGSQL_PASSWORD=${PHPU_PGSQL_PASSWORD}
    depends_on:
      - db
    networks:
      - moodle_network
    deploy:
      resources:
        limits:
          cpus: ${CPUS}
          memory: ${MEMORY}
  certbot:
    image: certbot/certbot:latest
    container_name: ${STACK_NAME}_certbot
    restart: always
    networks:
      - moodle_network
    depends_on:
      - web
    volumes:
      - ${STACK_VOLUME}/moodle/certbot/www/:/var/www/certbot/:rw
      - ${STACK_VOLUME}/moodle/certbot/conf/:/etc/letsencrypt/:rw
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    deploy:
      resources:
        limits:
          cpus: ${CPUS}
          memory: ${MEMORY}
  db:
    # image: postgres:13
    build:
      context: ./docker-files/db/pgsql
    container_name: ${STACK_NAME}_db
    restart: always
    # ports:
    #   - "${PGSQL_PORT}:5432"
    environment:
      - POSTGRES_DB=${PGSQL_DB}
      - POSTGRES_USER=${PGSQL_USER}
      - POSTGRES_PASSWORD=${PGSQL_PASSWORD}
      - TZ=${TZ}
    volumes:
      - ${STACK_VOLUME_DB}/master/${DBTYPE}/data:/var/lib/postgresql/data
      - ./config/db/master/pgsql/init.sql.template:/init.sql.template
      - ./config/db/master/pgsql/custom-docker-entrypoint.sh:/custom-docker-entrypoint.sh
    entrypoint: ["/custom-docker-entrypoint.sh"]
    networks:
      - moodle_network
    deploy:
      resources:
        limits:
          cpus: ${CPUS}
          memory: ${MEMORY}

  db_phpu:
    # image: postgres:13
    build:
      context: ./docker-files/db/pgsql
    container_name: ${STACK_NAME}_phpunit_db
    restart: always
    # ports:
    #   - "${PHPU_PGSQL_PORT}:5432"
    environment:
      - POSTGRES_DB=${PHPU_PGSQL_DB}
      - POSTGRES_USER=${PHPU_PGSQL_USER}
      - POSTGRES_PASSWORD=${PHPU_PGSQL_PASSWORD}
      - TZ=${TZ}
    volumes:
      - ${STACK_VOLUME_DB}/phpunit/${DBTYPE}/data:/var/lib/postgresql/data
      - ./config/db/phpunit/pgsql/init.sql.template:/init.sql.template
      - ./config/db/phpunit/pgsql/custom-docker-entrypoint.sh:/custom-docker-entrypoint.sh
    entrypoint: ["/custom-docker-entrypoint.sh"]
    networks:
      - moodle_network
    deploy:
      resources:
        limits:
          cpus: ${CPUS}
          memory: ${MEMORY}
    
  pgadmin:
    image: dpage/pgadmin4
    container_name: ${STACK_NAME}_pgadmin_db
    restart: always
    ports:
      - "${HOST_IP}:${PGSQL_PGA_PORT}:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
      - PGADMIN_CONFIG_SERVER_MODE=True
      - PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED=False
    entrypoint: > 
      sh -c "
      chmod 600 /pgpass; /entrypoint.sh;
      "
    user: root
    depends_on:
      - db
      - db_phpu
    configs:
      - source: servers.json
        target: /pgadmin4/servers.json
      - source: pgpass
        target: /pgpass
    networks:
      - moodle_network
    deploy:
      resources:
        limits:
          cpus: ${CPUS}
          memory: ${MEMORY}

configs:
  pgpass:
    content: |
      db:5432:${PGSQL_DB}:${PGSQL_USER}:${PGSQL_PASSWORD}
      db_phpu:5432:${PHPU_PGSQL_DB}:${PHPU_PGSQL_USER}:${PHPU_PGSQL_PASSWORD}
  servers.json:
    content: |
      {"Servers": {"1": {
        "Group": "Servers",
        "Name": "Moodle DB",
        "Host": "db",
        "Port": 5432,
        "MaintenanceDB": "${PGSQL_DB}",
        "Username": "${PGSQL_USER}",
        "PassFile": "/pgpass",
        "SSLMode": "prefer"
      },"2": {
        "Group": "Servers",
        "Name": "PHPU DB",
        "Host": "db_phpu",
        "Port": 5432,
        "MaintenanceDB": "${PHPU_PGSQL_DB}",
        "Username": "${PHPU_PGSQL_USER}",
        "PassFile": "/pgpass",
        "SSLMode": "prefer"
      }}}

networks:
  moodle_network: